name: Automatic tests

on: [push, pull_request]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Using Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Install app dependencies
        run: yarn --frozen-lockfile
        working-directory: ./app

      - name: Run unit tests
        run: yarn test

      - name: Check translation files
        id: check-translation-files
        run: yarn gen-translations:app --fail-on-update && yarn gen-translations:email --fail-on-update

      - name: Display translation error
        if: ${{ failure() && steps.check-translation-files.conclusion == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('The translation files are not up to date. Please run "yarn gen-translations" in the directory root and commit the updated translation files.')

      - name: Generate email templates
        id: gen-email-templates
        run: yarn gen-emails

      - name: Check email templates
        uses: tj-actions/verify-changed-files@v15
        id: check-email-templates
        with:
          files: server/email/*.html

      - name: Display email template error
        if: ${{ steps.check-email-templates.outputs.files_changed == 'true' || failure() && steps.gen-email-templates.conclusion == 'failure' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('The email templates seem outdated. Please run "yarn gen-emails" in the directory root and commit the updated email templates.')

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Building Docker containers
        run: cd ./integration && docker-compose build

      - name: Running Docker containers
        run: cd ./integration && docker-compose up -V -d

      - name: Using Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Install app dependencies
        run: yarn --frozen-lockfile
        working-directory: ./app

      - name: Install playwright dependencies
        run: npx playwright install-deps && npx playwright install

      - name: Run integration tests
        run: yarn test:integration

      - name: View app-server logs
        if: ${{ failure() }}
        run: docker logs integration_app-server_1

      - name: View mailgun logs
        if: ${{ failure() }}
        run: docker logs integration_mailgun_1

      - uses: actions/upload-artifact@v2
        if: ${{ failure() || success() }}
        with:
          name: test-results
          path: ./test-results/*
          retention-days: 5
          if-no-files-found: ignore
