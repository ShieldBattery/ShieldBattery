name: Automatic tests

on: [push, pull_request]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Using Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Cache app node_modules
        uses: actions/cache@v2
        id: cache-app-node-modules
        with:
          path: app/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-appnodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-appnodemodules-

      - name: Maybe install the dependencies
        run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Maybe install the app dependencies
        run: yarn
        working-directory: ./app
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-app-node-modules.outputs.cache-hit != 'true'

      - name: Run unit tests
        run: yarn test

      - name: Check translation files
        id: check-translation-files
        run: yarn gen-translations --fail-on-update

      - name: Display translation error
        if: ${{ failure() && steps.check-translation-files.conclusion == 'failure' }}
        run: >
          echo "The translation files seem incomplete. Please run \"yarn gen-translations\" in the
          directory root and commit the updated translation files." && exit 1

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Building Docker containers
        run: cd ./integration && docker-compose build

      - name: Running Docker containers
        run: cd ./integration && docker-compose up -V -d

      - name: Using Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-

      - name: Cache node_modules
        uses: actions/cache@v2
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Cache app node_modules
        uses: actions/cache@v2
        id: cache-app-node-modules
        with:
          path: app/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-appnodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-appnodemodules-

      - name: Maybe install the dependencies
        run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Maybe install the app dependencies
        run: yarn
        working-directory: ./app
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-app-node-modules.outputs.cache-hit != 'true'

      - name: Install playwright dependencies
        run: npx playwright install-deps && npx playwright install

      - name: Run integration tests
        run: yarn test:integration

      - name: View app-server logs
        if: ${{ failure() }}
        run: docker logs integration_app-server_1

      - uses: actions/upload-artifact@v2
        if: ${{ failure() || success() }}
        with:
          name: test-results
          path: ./test-results/*
          retention-days: 5
          if-no-files-found: ignore
