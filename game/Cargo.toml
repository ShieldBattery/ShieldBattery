[package]
name = "shieldbattery"
version = "0.1.0"
edition = "2018"

[lib]
name = "shieldbattery"
crate-type = ["cdylib"]

[profile.dev]
panic = "abort"

[profile.release]
debug = 1
panic = "abort"
overflow-checks = true
lto = true

[dependencies]
arrayvec = "0.5.1"
backtrace = "0.3"
byteorder = "1.3.1"
bytes = "0.5"
chrono = "0.4.6"
fern = "0.6"
futures = "0.3"
fxhash = "0.2.1"
http = "0.2"
lazy_static = "1.3"
libc = "0.2.50"
log = "0.4"
once_cell = "1.5"
parking_lot = { version = "0.11", features = ["send_guard"] }
quick-error = "2.0"
rand = "0.7"
reqwest = { version = "0.10.9", features = ["json"] }
scopeguard = "1.1"
serde = { version = "1.0.89", features = ["derive", "rc"] }
serde_json = "1.0.39"
smallvec = "1.4"
tokio = { version = "0.2", features = ["fs", "net", "rt-threaded", "stream", "sync", "time"] }
tungstenite = { version = "0.11", default-features = false }
tokio-tungstenite = "0.11"

[dependencies.winapi]
version = "0.3.9"
features = [
    "combaseapi", "dsound", "debugapi", "d3d11", "dxgi", "errhandlingapi", "handleapi",
    "knownfolders", "libloaderapi", "memoryapi", "processthreadsapi", "shlobj", "stringapiset",
    "synchapi", "sysinfoapi", "unknwnbase", "winuser", "wingdi", "winsock2", "winver", "ws2def",
    "ws2ipdef",
]

[dependencies.whack]
git = "https://github.com/neivv/whack/"
rev = "1adee081ac5ebc8362f92801e2083bbbadd79d57"

[build-dependencies]
anyhow = "1.0.33"
serde_json = "1.0.39"

# -- Local helper crates --
[workspace]

[dependencies.scr-analysis]
path = "./scr-analysis"

[dependencies.compile-shaders]
path = "./compile-shaders"

[build-dependencies.compile-shaders]
path = "./compile-shaders"

[profile.dev.package.scr-analysis]
# Optimize scr-analysis subcrate as its code takes quite a lot of time to run
# if not optimized (That is also the main reason for it being a separate crate)
opt-level = 2

# Same for lower level analysis crates (Not sure if samase_scarf makes difference since
# it should be 90% generic functions that end up being optimized in scr-analysis)
[profile.dev.package.samase_scarf]
opt-level = 2

[profile.dev.package.scarf]
opt-level = 2

[profile.dev.package.memmem]
opt-level = 2

# The http crate relies pretty heavily on optimizations to be usable;
# http::header::name::parse_hdr is 135 kB unoptimized, 19 kB optimized
# (Imo it either way chooses a poor tradeoff between size and performance but oh well)
[profile.dev.package.http]
opt-level = 2
