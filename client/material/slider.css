@value colorTextFaint, colorTextPrimary, secondary, grey700 from '../styles/colors.css';
@value body1, caption from '../styles/typography.css';
@value fastOutSlowIn, linearOutSlowIn, fastOutLinearIn from './curve-constants.css';

@value thumbWidth: 12px;
@value thumbHeight: 12px;
@value balloonWidth: 28px;
@value balloonHeight: 28px;

.slider {
  position: relative;
  height: 64px;
  contain: layout style;
}

.focused {
  outline: none;
}

.label {
  composes: body1;
  color: colorTextFaint;
  pointer-events: none;
  position: absolute;
  top: 8px;
  left: 2px;
}

.clickableArea {
  position: absolute;
  left: 0;
  bottom: 0;
  height: 32px;
  width: 100%;
  cursor: pointer;
}

.track {
  position: absolute;
  width: 100%;
  height: 2px;
  left: 0px;
  top: 48px;
  background-color: rgba(255, 255, 255, 0.3);
}

.filled {
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: secondary;
  transform: scaleX(1);
  transform-origin: 0% 50%;
  transition: transform 200ms fastOutSlowIn;
  will-change: transform;
}

.valueTick {
  position: absolute;
  width: 2px;
  height: 2px;
  background-color: rgba(255, 255, 255, 0.7);
  margin-left: -1px;
}

.tickContainer {
  position: absolute;
  opacity: 1;
  width: calc(100% - 12px);
  left: 6px;
}

.tickEnter {
  opacity: 0;
  transition: opacity 150ms linearOutSlowIn;
}

.tickEnterActive {
  opacity: 1;
}

.tickLeave {
  opacity: 1;
  transition: opacity 150ms fastOutLinearIn;
}

.tickLeaveActive {
  opacity: 0;
}

.overflowClip {
  position: absolute;
  overflow-x: hidden;
  overflow-y: visible;
  /* this is balloonWidth, but one of our CSS transforms doesn't like it */
  width: calc(100% + 28px - 12px);
  height: 100%;
  top: 0;
  left: calc(balloonWidth / -2 + thumbWidth / 2);
  padding: 0 14px;
  pointer-events: none; /* handled by clickable-area */
  user-select: none;
}

.thumbContainer {
  position: relative;
  top: calc(48px - thumbHeight / 2);
  width: 100%;
  pointer-events: none; /* handled by clickable-area */
  user-select: none;
  will-change: transform;
  transition: transform 150ms fastOutSlowIn;
}

.thumb {
  position: absolute;
  background-color: secondary;
  width: thumbWidth;
  height: thumbHeight;
  left: calc(thumbWidth / -2);
  border-radius: 50%;
  z-index: 1;
  transition: background-color 300ms fastOutSlowIn;
  pointer-events: none; /* handled by clickable-area */
}

.thumbEmpty {
  composes: thumb;
  background-color: #ffffff;
}

.balloon {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: balloonWidth;
  height: balloonHeight;
  top: -42px;
  left: calc(balloonWidth / -2);
  border-radius: 50%;
  background-color: secondary;
  color: rgba(0, 0, 0, 0.87);
  text-align: center;
  transform-origin: 50% 150%;
  transition: transform 250ms fastOutSlowIn,
      background-color 300ms fastOutSlowIn,
      color 300ms fastOutSlowIn;
  will-change: transform, background-color, color;
  pointer-events: none;
}

.balloonEmpty {
  composes: balloon;
  background-color: grey700;
  color: colorTextPrimary;
}

.balloonAfter {
  position: absolute;
  content: '';
  left: 0;
  top: 19px;
  border-radius: 16px;
  border-top: 16px solid secondary;
  border-left: calc(balloonWidth / 2) solid transparent;
  border-right: calc(balloonWidth / 2) solid transparent;
  z-index: 1;
  transition: border-top-color 300ms fastOutSlowIn;
  will-change: border-top-color;
}

.balloonEmpty .balloonAfter {
  border-top-color: grey700;
}

.balloonText {
  composes: caption;
  font-weight: 500;
  line-height: balloonHeight;
  z-index: 2;
}

.balloonEnter {
  transform: scale(0, 0);
}

.balloonEnterActive {
  transform: scale(1, 1);
}

.balloonLeave {
  transform: scale(1, 1);
}

.balloonLeaveActive {
  transform: scale(0, 0);
}
